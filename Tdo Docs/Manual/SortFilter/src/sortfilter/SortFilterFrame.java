/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SortFilterFrame.java
 *
 * Created on 18.08.2008, 13:25:16
 */

package sortfilter;

import java.util.Date;
import javax.swing.table.TableModel;
import tdo.DataTable;
import tdo.impl.Sorter;
import tdo.swing.model.ModelProvider;

/**
 *
 * @author valery
 */
public class SortFilterFrame extends javax.swing.JFrame {

    /** Creates new form SortFilterFrame */
    public SortFilterFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        sortButton1 = new javax.swing.JButton();
        initTableButton1 = new javax.swing.JButton();
        sortButton2 = new javax.swing.JButton();
        cancelSortButton1 = new javax.swing.JButton();
        cancelSort1Button2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        sortButton1.setText("Sort");
        sortButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButton1ActionPerformed(evt);
            }
        });

        initTableButton1.setText("init Table");
        initTableButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initTableButton1ActionPerformed(evt);
            }
        });

        sortButton2.setText("Sort 1");
        sortButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButton2ActionPerformed(evt);
            }
        });

        cancelSortButton1.setText("cancel Sort");
        cancelSortButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSortButton1ActionPerformed(evt);
            }
        });

        cancelSort1Button2.setText("cancel Sort 1");
        cancelSort1Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSort1Button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(initTableButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(sortButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sortButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                    .addComponent(cancelSort1Button2)
                    .addComponent(cancelSortButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(initTableButton1)
                        .addGap(18, 18, 18)
                        .addComponent(sortButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelSort1Button2)
                        .addGap(18, 18, 18)
                        .addComponent(cancelSortButton1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sortButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButton1ActionPerformed
        //persons.filter("firstName='Tom'");
        //persons.sort("lastName");
        //persons.sort("lastName,firstName");
        //persons.sort("lastName,firstName",Sorter.DESCENDING);
        //persons.sort("lastName,firstName DESC");
        //persons.sort("lastName,firstName, birthDay ASC",Sorter.DESCENDING);
        sorter = persons.sort("firstName");

        

    }//GEN-LAST:event_sortButton1ActionPerformed
    DataTable persons;
    Sorter sorter;
    Sorter sorter1;
    
    private void initTableButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initTableButton1ActionPerformed
        persons = new DataTable();
        persons.getColumns().add(String.class, "FirstName") ;
        persons.getColumns().add(String.class,"LastName") ;
        persons.getColumns().add(Date.class,"birthDay");

        persons.getColumns().add(Date.class,"startDay");

        persons.addRow(new Object[] {"Tom", "Soyer", "1992-01-03", "2004-03-07"}  );
        persons.addRow( new Object[] {"Bill", "Gates", "1973-12-12", "1994-08-06"} );
        persons.addRow( new Object[] {"Tom", "Gates", "1969-11-13", "1990-07-05"} );
        persons.addRow( new Object[] {"Bob", "Stone", "1970-01-01", "1993-09-03"} );
        persons.addRow( new Object[] {"Tom", "Gates", "1968-11-13", "1988-07-05"} );
        persons.addRow( new Object[] {"Ann", "Stone", "1970-01-01", "1993-09-03"} );
        persons.addRow( new Object[] {"Ann", "Stone", "1982-01-01", "2003-11-03"} );
        persons.addRow( new Object[] {"Ann", "Stone", "1969-01-01", "1993-09-03"} );
        
        ModelProvider mp = new ModelProvider();
        TableModel model = mp.getTableModel(persons);
        this.jTable1.setModel(model);

    }//GEN-LAST:event_initTableButton1ActionPerformed

    private void sortButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButton2ActionPerformed
        sorter1 = persons.sort("lastName");
    }//GEN-LAST:event_sortButton2ActionPerformed

    private void cancelSort1Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSort1Button2ActionPerformed
        persons.cancelSort(sorter1);
    }//GEN-LAST:event_cancelSort1Button2ActionPerformed

    private void cancelSortButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSortButton1ActionPerformed
        persons.cancelSort(sorter);
    }//GEN-LAST:event_cancelSortButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortFilterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelSort1Button2;
    private javax.swing.JButton cancelSortButton1;
    private javax.swing.JButton initTableButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton sortButton1;
    private javax.swing.JButton sortButton2;
    // End of variables declaration//GEN-END:variables

}
